# Stock Price Tracker

A web application for tracking and visualizing Vietnamese stock prices in real-time, with historical data viewing capabilities.

## Features

- Real-time stock price tracking (1-minute updates for intraday view)
- Multiple timeframe options: 1 day, 5 days, 1 week, 1 month, 6 months, 1 year
- Custom date range selection
- Responsive design that works on desktop and mobile
- Interactive charts with Plotly.js
- Dark mode UI optimized for financial data

## Project Structure

```
stock-tracker/
├── backend/             # Flask backend API
│   ├── app.py           # Main Flask application
│   ├── stock_service.py # Service for handling stock data
│   └── requirements.txt # Python dependencies
├── frontend/            # Frontend HTML/CSS/JS
│   ├── index.html       # Main HTML page
│   ├── css/
│   │   └── styles.css   # CSS for styling
│   └── js/
│       ├── main.js      # Main frontend logic
│       └── chart.js     # Chart rendering functions
└── README.md            # Project documentation
```

## Setup Instructions

### Backend Setup

1. Navigate to the backend directory:
   ```
   cd stock-tracker/backend
   ```

2. Create a virtual environment (optional but recommended):
   ```
   python -m venv venv
   source venv/bin/activate  # On Windows: venv\Scripts\activate
   ```

3. Install dependencies:
   ```
   pip install -r requirements.txt
   ```

4. Run the Flask application:
   ```
   python app.py
   ```

The backend server will start at http://localhost:5000

### Frontend Setup

The frontend is entirely static and can be served using any web server. For development:

1. Navigate to the frontend directory:
   ```
   cd stock-tracker/frontend
   ```

2. You can use any simple HTTP server to serve the files:
   ```
   # Using Python
   python -m http.server 8080
   
   # Or using Node.js http-server if installed
   npx http-server -p 8080
   ```

3. Open your browser and go to http://localhost:8080

## API Endpoints

- `GET /api/stock-data`: Get stock price data
  - Parameters:
    - `symbol`: Stock symbol (e.g., "BSI.VN")
    - `timeframe`: Time range ("1d", "5d", "1w", "1mo", "6mo", "1y", or "custom")
    - `start_date`: Start date for custom range (format: YYYY-MM-DD)
    - `end_date`: End date for custom range (format: YYYY-MM-DD)

- `GET /api/available-stocks`: Get list of available stocks

## Technologies Used

- **Backend**:
  - Flask (Python web framework)
  - yfinance (Yahoo Finance API wrapper)
  - pandas (Data manipulation)

- **Frontend**:
  - HTML5, CSS3, JavaScript
  - Plotly.js (Interactive charts)
  - Flatpickr (Date picker)

## License

[MIT License](LICENSE)